{
  "name": "karma-nodewebkit-launcher",
  "version": "0.0.12",
  "description": "A Karma plugin. Launcher for node-webkit.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/intelligentgolf/karma-nodewebkit-launcher.git"
  },
  "keywords": [
    "karma-plugin",
    "karma-launcher",
    "node-webkit"
  ],
  "author": {
    "name": "Vojta Jina",
    "email": "vojta.jina@gmail.com"
  },
  "dependencies": {
    "async": "~0.2.10",
    "merge": "~1.1.2",
    "ncp": "~0.5.0",
    "nw": "~0.12.0-1"
  },
  "peerDependencies": {
    "karma": ">=0.9"
  },
  "license": "MIT",
  "devDependencies": {
    "grunt-npm": "0.0.2",
    "grunt": "~0.4.1",
    "grunt-bump": "0.0.7",
    "grunt-auto-release": "0.0.2"
  },
  "contributors": [
    {
      "name": "Andreas Krummsdorf",
      "email": "a.krummsdorf@litixsoft.de"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Michal Charemza",
      "email": "michalcharemza@gmail.com"
    }
  ],
  "readme": "# karma-nodewebkit-launcher\n\n> Launcher for node-webkit. \n\n---\n\nThis is a small but experimental launcher, based on the [Safari Launcher](https://github.com/karma-runner/karma-safari-launcher) by Vojta Jina and contributors, and not affiliated with any official or semi-official Karma plugins.\n\n---\n\n\n## Installation\n\nThe easiest way is to keep `karma-nodewebkit-launcher` as a devDependency in your `package.json`.\n\n\n    {\n      \"devDependencies\": {\n        \"karma\": \"~0.10\",\n        \"karma-nodewebkit-launcher\": \"~0.0.6\"\n      }\n    }\n\n\nYou can do it on the command line by:\n\n    npm install karma-nodewebkit-launcher --save-dev\n\n## Configuration\n\n    // karma.conf.js\n    module.exports = function(config) {\n      config.set({\n        browsers: ['NodeWebkit']\n      });\n    };\n\n\nYou can pass list of browsers as a CLI argument too:\n\n    karma start --browsers NodeWebkit\n\n## Locally-installed Node modules\n\nIf you're using locally-installed Node modules via `require` in your code in the `node_modules` directory, you should be able to just `require` them, and they should be found by the testing environment. If they are in another location, in order for the testing environment to find them, you have 2 options.\n\nYou can explicitly set `NODE_PATH` in the environment to the directory containing the modules.\n\n    export NODE_PATH=/full/path/to/custom_node_modules\n\nAlternatively, you can create a custom configuration in `karma.conf.js`:\n\n    browsers: ['NodeWebkitWithCustomPath],\n\n    customLaunchers: {\n      'NodeWebkitWithCustomPath': {\n        base: 'NodeWebkit',\n        // Remember to include 'node_modules' if you have some modules there\n        paths: ['relative/path/to/custom_node_modules', 'node_modules']\n      }\n    } \n    \n## Avoid download of NodeWebkit binary on every build\n\nThe launcher depends on [`npm-installer`](https://github.com/nwjs/npm-installer) to download the NodeWebkit binary for your platform and achitecture. The default behaviour of this is to download on every `npm install`, which can take time. To avoid this you can download the file ahead of time, save it to a location accessibly by `http://` or `file://` URL, and set the `nwjs_urlbase` option of [`npm-installer`](https://github.com/nwjs/npm-installer) to retrieve the binary from this location.\n\nYou can do this on the command line\n\n    npm install --nwjs_urlbase=file:///home/bilbo/my/own/mirror\n\nvia a line in a `.npmrc` file\n\n    nwjs_urlbase=file:///home/bilbo/my/own/mirror\n\nor by the environment variable `NWJS_URLBASE`\n\n    export NWJS_URLBASE=file:///home/bilbo/my/own/mirror\n\n## Custom node-webkit manifest\n\nThe default node-webkit [`package.json`](https://github.com/rogerwang/node-webkit/wiki/Manifest-format) that is used in the launcher is\n\n    {\n      \"name\": \"karma-runner\",\n      \"main\": \"index.html\",\n      \"node-remote\": \"<local>\"\n    }\n    \nYou can overwrite and add to these defaults by creating a custom configuration in `karma.conf.js`. For example, to run your tests in kiosk mode\n\n    browsers: ['NodeWebkitKiosk'],\n\n    customLaunchers: {\n      'NodeWebkitKiosk': {\n        base: 'NodeWebkit',\n        options: {\n          window: {\n            'kiosk': true\n          }\n        }\n      }\n    }\n\nThe `options` in the above example are merged with the defaults, so the resulting `package.json` used in node-webkit is\n\n    {\n      \"name\": \"karma-runner\",\n      \"main\": \"index.html\",\n      \"node-remote\": \"<local>\",\n      \"window\": {\n        \"kiosk\": true\n      }\n    }\n\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/intelligentgolf/karma-nodewebkit-launcher/issues"
  },
  "homepage": "https://github.com/intelligentgolf/karma-nodewebkit-launcher",
  "_id": "karma-nodewebkit-launcher@0.0.12",
  "dist": {
    "shasum": "8c804d9625ccc1172ed54a126885320dc45849cc"
  },
  "_from": "karma-nodewebkit-launcher@",
  "_resolved": "https://registry.npmjs.org/karma-nodewebkit-launcher/-/karma-nodewebkit-launcher-0.0.12.tgz"
}
